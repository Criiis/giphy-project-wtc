{"mappings":"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","sources":["src/scripts/config.js","src/scripts/controller.js","node_modules/@swc/helpers/src/_define_property.mjs","src/scripts/views/viewHelpers.js","src/scripts/helpers.js","src/scripts/views/randomView.js","src/scripts/views/searchView.js","src/scripts/views/trendingView.js","src/scripts/main.js"],"sourcesContent":["/**\n * all config needed for this project // some of this things could be in a .env file\n */\n\nexport const API_TIMEOUT_SEC = 15\nexport const API_URL = 'https://api.giphy.com/v1/gifs/'\nexport const API_TOKEN = 'XSRthheAmTaIEIj4hLXVcyseFf4ME5Aa'\n\nexport const API_RANDOM_GIF = `${API_URL}random?api_key=${API_TOKEN}&lang=en&rating=g`\nexport const API_TRENDING_GIF = `${API_URL}trending?api_key=${API_TOKEN}&lang=en&rating=g&limit=10`\nexport const API_SEARCH_GIF = `${API_URL}search?api_key=${API_TOKEN}&limit=30`\n","//functionality for mobile nav clicks\nexport const navController = e => {\n  e.preventDefault()\n  const button = e.target.closest('.nav__item')\n  const dataSection = button.dataset.section\n  const allNavItems = Array.from(document.querySelectorAll('.nav__item'))\n  const allSectionItems = Array.from(document.querySelectorAll('.section'))\n  const sectionToActivate = document.querySelector(`.${dataSection}`)\n  const navActivateClass = 'nav__item--active'\n  const sectionActivateClass = 'section--active'\n\n  //remove class for nav and section\n  allNavItems.forEach(el => {\n    el.setAttribute('aria-selected', false)\n    el.classList.remove(navActivateClass)\n  })\n  allSectionItems.forEach(el => el.classList.remove(sectionActivateClass))\n\n  //add class for active nav and section\n  button.classList.add(navActivateClass)\n  button.setAttribute('aria-selected', true)\n\n  sectionToActivate.classList.add(sectionActivateClass)\n\n  sectionToActivate.children[0].focus()\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","import { API_TIMEOUT_SEC } from '../config.js'\nimport { errorLoading, getJSON, promiseAllImage, timeout } from '../helpers.js'\n\n/**\n *\n * @param { title, images } -> data from the API\n * @returns template literals with the picture\n */\nexport const gifStructure = ({ title, images }) => {\n  const gifDescription = title === '' ? 'unknown gif' : title\n  return `\n<picture>\n    <source type=\"image/webp\" media=\"(max-width: 728px)\" srcset=\"${images.preview_webp.url}\"/> \n    <source type=\"image/webp\" srcset=\"${images.original.webp}\"/>\n    <source media=\"(max-width: 728px)\" srcset=\"${images.preview_webp.url}\"/>\n    <img src=\"${images.original.url}\" alt=\"${gifDescription}\" loading=\"lazy\" />\n</picture>\n`\n}\n/**\n *\n * @param {*} message -> error\n * @returns template literals with the error\n */\nexport const gifError = message =>\n  `<p class=\"error\">Sorry, ${message}. Try again.</p>`\n\n/**\n *\n * @param {*} data -> data from the API\n * @param {*} section -> section where the picture container will sit\n * @returns template literals with the picture + container\n */\nexport const singleGifContainer = (data, section = 'search-gif-container') => `\n<div class=\"${\n  section === 'search-gif-container' ? section : 'trending-gif-container'\n}__picture-container\">${gifStructure(data)}</div>`\n\n/**\n * create general view to hold the parent class with the fetch function for trending and finder section\n */\nexport default class GeneralView {\n  fetchingGifData = async function (url) {\n    try {\n      if (!url) throw new Error('Could not fetch data')\n      // get API data -> also has a timeout in case the API call for some reason takes more than 15s to respond it will throw an error\n      const data = await Promise.race([getJSON(url), timeout(API_TIMEOUT_SEC)])\n      if (data.length === 0) throw new Error('Could not find any results')\n\n      //remove error from result div\n      this._resultContainer.classList.remove('error')\n\n      //apply the each gif to the page\n      data.forEach(gif =>\n        this._resultContainer.insertAdjacentHTML(\n          'beforeend',\n          singleGifContainer(gif, this._sectionName)\n        )\n      )\n\n      // check the image is loaded or not for each picture container\n      this._pictureContainer().forEach(async container => {\n        try {\n          // if fulfilled remove the loading screen by adding a class\n          await promiseAllImage(\n            container.querySelectorAll('picture *'),\n            this._pictureParent\n          )\n        } catch (err) {\n          // rejected add an error to image container -> err in this case will be the image element\n          console.error(err)\n          errorLoading(err, `Image not found`, this._pictureParent)\n        }\n      })\n    } catch (err) {\n      //if api call rejected then add error to section\n      console.error(err)\n      errorLoading(this._resultContainer, err)\n    }\n  }\n}\n","import { gifError, gifStructure } from './views/viewHelpers'\n// This file contains all the functions that will be used multiple times\n\n/**\n * function to stop the fetch if it takes very long time to fetch\n * @param {*} s -> number of seconds until it will return the fulfilled or rejected promise\n */\nexport const timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`))\n    }, s * 1000)\n  })\n}\n\n/**\n * simple function to fetch data to feed the HTML structure\n * @param url -> url to fetch data\n * @returns -> return the data to be used for HTML\n */\nexport const getJSON = async url => {\n  try {\n    const res = await fetch(url)\n    if (!res.ok) throw new Error(`Couldn't fetch data, pls try again!`)\n    const { data } = await res.json()\n    return data\n  } catch (err) {\n    throw err\n  }\n}\n\n/**\n * will return a fulfilled or a rejected promise when the imageElement param is loaded\n * @param {*} imageElement\n * @returns\n */\nexport const imageLoadChecker = imageElement => {\n  return new Promise((resolve, reject) => {\n    imageElement.addEventListener('load', function () {\n      resolve(this)\n    })\n\n    imageElement.addEventListener('error', function () {\n      reject(this)\n    })\n  })\n}\n\n/**\n * will return a fulfilled or rejected promise for all once the one of the images inside of the picture is loaded\n * @param {*} pictureChild -> all childs of the picture element\n * @param {*} pictureParent -> the string to find the closest element of the image loaded for example -> '.random-gif-container__picture-container'\n */\nexport const promiseAllImage = async (pictureChild, pictureParent) => {\n  try {\n    return await Promise.all(\n      Array.from(pictureChild).map(async image => {\n        // get response from image loader checker function\n        await imageLoadChecker(image)\n        // add class loaded if the promise fulfilled\n        image.closest(pictureParent)?.classList.add('loaded')\n      })\n    )\n  } catch (error) {\n    console.error(error)\n    throw error\n  }\n}\n\n/**\n * clean div and add data to page\n * @param {*} imageParentContainer -> parent of the picture element\n * @param {*} data -> data to build the structure\n */\nexport const gifLoading = (imageParentContainer, data) => {\n  imageParentContainer.classList.remove('error')\n  imageParentContainer.innerHTML = ''\n  // create and insert the image element into HTML behind the loading container\n  imageParentContainer.insertAdjacentHTML('beforeend', gifStructure(data))\n}\n\n/**\n * clean div and add error to page\n * @param {*} imageParentContainer -> parent of the picture element\n * @param {*} error -> error message to print\n */\nexport const errorLoading = (element, error, imageContainer = undefined) => {\n  element = imageContainer ? element.closest(imageContainer) : element //had to do this cause element can be an image and i need the container of the picture/image checky tho\n  element.innerHTML = ''\n  element.insertAdjacentHTML('beforeend', gifError(error))\n  element.classList.add('error')\n}\n","import { API_RANDOM_GIF, API_TIMEOUT_SEC } from '../config.js'\nimport {\n  errorLoading,\n  getJSON,\n  gifLoading,\n  promiseAllImage,\n  timeout,\n} from '../helpers.js'\n\nclass RandomView {\n  _sectionName = 'random-gif-container'\n  _pictureParent = `.${this._sectionName}__picture-container`\n  _parentElement = document.querySelector(`section.${this._sectionName}`)\n  // picture container -> this will be very important element as it is the one with loading screen\n  _pictureParentSection = () =>\n    this._parentElement.querySelector(this._pictureParent)\n  // picture element\n  _pictureSection = () => this._pictureParentSection().querySelector('picture')\n  // all elements inside the picture\n  _pictureSectionElements = () => this._pictureSection().querySelectorAll('*')\n  // shuffle button\n  _shuffleCTA = this._parentElement.querySelector(\n    `.${this._sectionName}__shuffle-gif`\n  )\n\n  //API Fetch call for this view\n  controlRandom = async function () {\n    try {\n      // get API data -> also has a timeout in case the API call for some reason takes more than 15s to respond it will throw an error\n      const data = await Promise.race([\n        getJSON(API_RANDOM_GIF),\n        timeout(API_TIMEOUT_SEC),\n      ])\n      // add gif structure into the page\n      gifLoading(this._pictureParentSection(), data)\n      // await and remove the loading screen when gif is loaded\n      await promiseAllImage(this._pictureSectionElements(), this._pictureParent)\n    } catch (err) {\n      this._errorHandler(err)\n    }\n  }\n\n  //handel the error for the async function\n  _errorHandler(err) {\n    console.error(err)\n    if (err.nodeType)\n      return errorLoading(err, `Image not found`, this._pictureParent)\n    errorLoading(this._pictureParentSection(), err.message)\n  }\n\n  //reset section for random gif\n  _resetSection() {\n    this._pictureParentSection()?.classList.remove('loaded', 'error')\n    this._pictureSection()?.remove()\n  }\n\n  //reload functionality for CTA\n  reloadHandler() {\n    this._shuffleCTA.addEventListener('click', () => {\n      this._resetSection() //bind(this) wasn't working with a traditional function, not sure why, so transformed this into arrow function and this keyword is related to the parent\n      this.controlRandom()\n    })\n  }\n}\n\nexport default new RandomView()\n","import { API_SEARCH_GIF } from '../config.js'\nimport GeneralView from './viewHelpers.js'\n\nclass SearchView extends GeneralView {\n  _sectionName = 'search-gif-container'\n  _pictureParent = `.${this._sectionName}__picture-container`\n  _parentElement = document.querySelector(`section.${this._sectionName}`)\n  //search input\n  _formInputSearch = this._parentElement.querySelector(\n    `.${this._sectionName}__search-input`\n  )\n  //search button\n  _formCTASearch = this._parentElement.querySelector(\n    `.${this._sectionName}__search-btn`\n  )\n  //search results container\n  _resultContainer = this._parentElement.querySelector(\n    `.${this._sectionName}__results`\n  )\n  //get all picture parent\n  _pictureContainer = () =>\n    Array.from(document.querySelectorAll(this._pictureParent))\n\n  // click for when user search for\n  searchHandler = () => {\n    this._formCTASearch.addEventListener('click', e => {\n      e.preventDefault()\n      const searchValue = this._formInputSearch\n      const searchURL = `${API_SEARCH_GIF}&q=${searchValue.value}`\n      this._resultContainer.innerHTML = ''\n      this.fetchingGifData(searchURL)\n      searchValue.value = ''\n      searchValue.blur()\n    })\n  }\n}\n\nexport default new SearchView()\n","import GeneralView from './viewHelpers'\n\nclass TrendingView extends GeneralView {\n  _sectionName = 'trending-gif-container'\n  _pictureParent = `.${this._sectionName}__picture-container`\n  _parentElement = document.querySelector(`section.${this._sectionName}`)\n  //search results container\n  _resultContainer = this._parentElement.querySelector(\n    `.${this._sectionName}__results`\n  )\n  //get all picture parent\n  _pictureContainer = () =>\n    Array.from(document.querySelectorAll(this._pictureParent))\n}\n\nexport default new TrendingView()\n","/**\n * where the magic will happen all the action will happen\n */\nimport { API_TRENDING_GIF } from './config.js'\nimport { navController } from './controller.js'\n\nimport randomView from './views/randomView.js'\nimport searchView from './views/searchView.js'\nimport trendingView from './views/trendingView.js'\n\nconst nav = document.querySelector('.nav')\n\n//init all functionality\n;(function () {\n  // initialize the random gif\n  randomView.controlRandom()\n  //add click event for \"next\" in random section\n  randomView.reloadHandler()\n  //add search functionality\n  searchView.searchHandler()\n  //load trending gifs\n  trendingView.fetchingGifData(API_TRENDING_GIF)\n\n  //nav clicks for mobile\n  nav.addEventListener('click', navController)\n})()\n"],"names":["$031a2916276aefa4$export$5234c72cc55fad22","e","preventDefault","button","target","closest","dataSection","dataset","section","allNavItems","Array","from","document","querySelectorAll","allSectionItems","sectionToActivate","querySelector","navActivateClass","sectionActivateClass","forEach","el","setAttribute","classList","remove","add","children","focus","$9139f4380ced0e7c$export$2e2bcd8739ae039","obj","key","value","Object","defineProperty","enumerable","configurable","writable","$c3f364dba6c29fe4$export$b48422c3f142cfbf","title","images","gifDescription","preview_webp","url","original","webp","$c3f364dba6c29fe4$export$2e2bcd8739ae039","this","async","Error","data","Promise","race","$b4bda285e6fe622f$export$d047a7c56db64af4","$b4bda285e6fe622f$export$83e74882c5df8fe1","length","_resultContainer","gif","insertAdjacentHTML","$c3f364dba6c29fe4$export$91a6830e93b8de84","_sectionName","_pictureContainer","container","$b4bda285e6fe622f$export$14e67f14ad12042d","_pictureParent","err","console","error","$b4bda285e6fe622f$export$7924c3aa4c50fda7","s","_","reject","setTimeout","res","fetch","ok","json","$b4bda285e6fe622f$export$44b45f88e0b6d36f","imageElement","resolve","addEventListener","pictureChild","pictureParent","all","map","image","ref","$b4bda285e6fe622f$export$2b6841ebcac1144a","imageParentContainer","innerHTML","element","imageContainer","$e5576785dc9afb25$export$2e2bcd8739ae039","_errorHandler","nodeType","_pictureParentSection","message","_resetSection","ref1","_pictureSection","reloadHandler","_shuffleCTA","controlRandom","_parentElement","_pictureSectionElements","$dd557fd86b35e0b0$export$2e2bcd8739ae039","_formCTASearch","searchValue","_formInputSearch","searchURL","fetchingGifData","blur","$66c3de2de2ff7cd1$export$2e2bcd8739ae039","$5a3fc3e2587399e4$var$nav","searchHandler"],"version":3,"file":"index.944baf5e.js.map"}